
# Matmake file
# https://github.com/mls-m5/matmake2

## -- clangplugin -----------------------------------

# convert to shared library
clangplugin
   out = clangplugin
   includes =
      /usr/lib/llvm-9/include/
   src = plugin/clang/*.cpp
   ldflags = -lclang-9
   !em:command = [static]
#   /usr/lib/llvm-11/include
#   /usr/lib/llvm-10/include/

core
   out = core
   src =
      src/completion/*.cpp
      src/files/*.cpp
      src/keys/*.cpp
      src/modes/*.cpp
      src/screen/*.cpp
      src/text/*.cpp
      src/script/*.cpp
      src/views/*.cpp
      src/syntax/*.cpp
      src/core/*.cpp

      plugin/*.cpp
   config = thread
   command = [static]

matgui
   out = matgui
   command = [static]
   eflags =
      -DUSE_TTF_FONT
   flags =
#      `pkg-config --cflags sdl2`
      `pkg-config --cflags sdl2 SDL2_ttf`
      -DUSE_TTF_FONT
   src = lib/matgui/src/*.cpp
   includes =
      /usr/include/SDL2
   em:eflags =
      -s USE_SDL=2 -DDISABLE_TEXTURES
   em:flags =
      -s USE_SDL=2

main
   in =
      @core
   !em:in =
      @matgui
      @clangplugin
   src =
      src/main.cpp
   copy =
      README.md
      data/oblivion.json
   libs =  -pthread
   out = medit
   command = [exe]
   config =
      thread
   !em:ldflags =
      `pkg-config --libs ncurses`
      -lstdc++fs
      -lGL
      -lSDL2
      -lSDL2_ttf


# ======== Tests =====================================

buffer_test
   in = @core
   src = test/buffer_test.cpp
   command = [test]
   out = buffer_test

cursorops_test
   in = @core
   src = test/cursorops_test.cpp
   command = [test]
   out = cursorops_test

wordsiterator_test
   in = @core
   src = test/wordsiterator_test.cpp
   command = [test]
   out = wordsiterator_test

keysettings_test
   in = @core
   src = test/keysettings_test.cpp
   command = [test]
   out = keysettings_test

fstring_test
   in = @core
   src = test/fstring_test.cpp
   command = [test]
   out = fstring_test

utf8char_test
   in = @core
   src = test/utf8char_test.cpp
   command = [test]
   out = utf8char_test

bufferkeymap_test
   in = @core
   src = test/bufferkeymap_test.cpp
   command = [test]
   out = bufferkeymap_test

mode_test
   in = @core
   src = test/mode_test.cpp
   command = [test]
   out = mode_test

palette_test
   in = @core
   src = test/palette_test.cpp
   command = [test]
   out = palette_test

project_test
   in = @core
   src = test/project_test.cpp
   copy = test/res/.medit.json
   command = [test]
   out = project_test

clang_autocomplete_test
   in =
      @core
      @clangplugin
   src =
      test/clang_autocomplete_test.cpp
      src/core/plugins.cpp # tmp fix registerPlugins
   command = [test]
   out = clang_autocomplete_test
   copy =
      test/res/complete_test1.cpp
      test/res/complete_test2.cpp
   ldflags = -lclang-9

clanghighlighting_test
   in =
      @clangplugin
      @core
   src =
      test/clanghighlighting_test.cpp
      src/core/plugins.cpp # tmp fix registerPlugins
   command = [test]
   out = clanghighlighting_test
   copy = test/res/annotation_test1.cpp
   ldflags = -lclang-9

basichighlighting_test
   in = @core
   src = test/basichighlighting_test.cpp
   command = [test]
   out = basichighlighting_test

history_test
   in = @core
   src = test/history_test.cpp
   command = [test]
   out = history_test



# ============ Generic rules =========================================

tests
   in =
      @buffer_test
      @cursorops_test
      @wordsiterator_test
      @keysettings_test
      @fstring_test
      @utf8char_test
      @bufferkeymap_test
      @mode_test
      @palette_test
      @project_test
      @basichighlighting_test
      @history_test
   !em:in =
      @clang_autocomplete_test
      @clanghighlighting_test
   includes =
      test/

all
   in =
      @main
      @tests

   config =
      c++17
   flags =
      -W
      -Wall
      -Wno-unused-parameter
      -Wno-sign-compare
      -Wnon-virtual-dtor
   includes =
      include
      src
      plugin/include
      plugin/clang/include
      lib/json.h/include
      lib/matrix-screen/include
      lib/matrix-screen/lib/sdlpp/include
   em:flags =
      -s USE_PTHREADS

